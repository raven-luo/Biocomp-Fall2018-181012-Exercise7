a=(Abby,Britney,Cat,Diane,Evey)
a=Abby,Britney,Cat,Diane,Evey
a=1,2,3,4,5
a<-5
a=c("abby","britney","cat","diane","Evey")
a[3]
a[1,2]
a[1:2]
M=matrix(1;4,nrow=2,ncol=2)
M=matrix(1:4,nrow=2,ncol=2)
View(M)
a=list(a,M)
a=c("abby","britney","cat","diane","Evey")
b=list(a,M)
View(M)
b[[1]][4]
b[[1]][4:5]
b[[1]][4,5]
halfmin=function(series){
halfmin=min(series)/2
return(halfmin)
}
halfmin(c(3,2,1))
halfmin(c(3,2,1))
halfmin(c(3,2,1),3)
halfmin=function(series,divideby=2){
halfmin=min(series)/divideby
return(halfmin)
}
halfmin(c(3,2,1),3)
local=function(local){
output=local/global
return(output)
}
local(3)
local=function(local){
output=local/global
return(output)
}
global=3
local(3)
local(3)
local=function(local){
output=local/global
return(output)
}
global=2
local(3)
local=function(local){
output=locali/global
return(output)
}
global=2
local(3)
locali
rm(list=ls())
setwd("C:/Users/raven/Desktop/biocomputing/exercise7/Biocomp-Fall2018-181012-Exercise7")
#task1: return odd rows of any data frame
odd=function(data_frame){
rownames=1:nrow(data_frame) # a vector of all the row numbers
odd_items=rownames%%2==1 # a vector of TRUE/FALSE of whether each row is divisible by 2
odd_rows=data_frame[odd_items,] # will index all the rows that leave the remainder of 1 (TRUE) when divided by 2, ie all odd rows
return(odd_rows) # return all the odd rows
}
iris=read.csv(file="iris.csv",header=TRUE,stringsAsFactors=FALSE)
odd(iris) # Usage example
